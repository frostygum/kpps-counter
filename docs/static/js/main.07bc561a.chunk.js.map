{"version":3,"sources":["components/navbar.js","utils/localStorage.js","config/constans.js","pages/Home.js","pages/Info.js","config/routes.js","App.js","index.js"],"names":["CustomNavbar","props","history","useHistory","useState","isOpen","setNavbar","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","push","setLocalStorage","key","value","localStorage","setItem","JSON","stringify","getLocalStorage","parse","getItem","removeLocalStorage","removeItem","CONST","Wrapper","styled","div","Home","count","setCount","male","setMale","female","setFemale","lastSet","setLast","add","num","isMale","Date","toLocaleString","useEffect","data","lastDate","total","React","Container","Row","Col","Badge","split","Button","block","icon","faMale","size","faFemale","CustomModal","toggle","positive","negative","Modal","ModalHeader","ModalBody","ModalFooter","Info","routes","exact","path","component","modal","setModal","MobileWrapper","App","map","route","idx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07bc561a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Navbar, \r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav, \r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nfunction CustomNavbar(props) {\r\n  const history = useHistory();\r\n  let [isOpen, setNavbar] = useState(false);\r\n\r\n  function toggle() {\r\n    setNavbar(!isOpen);\r\n  };\r\n\r\n  return(\r\n    <Navbar color=\"dark\" dark expand=\"md\">\r\n      <NavbarBrand href=\"/\">Counter</NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink onClick={() => history.push('/settings')}>Info</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default CustomNavbar;","export const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nexport const getLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nexport const removeLocalStorage = (key) => {\r\n  localStorage.removeItem(key);\r\n}\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n}  ","//CONSTANTS\r\nexport const CONST = {\r\n  KEY_DATA: 'total-count-data',\r\n  KEY_LMD: 'last-modified-data'\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Badge } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFemale, faMale } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { setLocalStorage, getLocalStorage } from '../utils/localStorage.js';\r\nimport { CONST } from '../config/constans.js';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  background-color: var(--gray);\r\n  color: var(--light);\r\n\r\n  .container {\r\n    height: calc(100vh - 112px) !important;\r\n  }\r\n\r\n  .count-num {\r\n    font-size: 8rem;\r\n  }\r\n\r\n  .badge.badge-info{\r\n    border: 0.2rem solid var(--light);\r\n  }\r\n\r\n  .btn {\r\n    border: 0.2rem solid var(--light);\r\n  }\r\n`\r\n\r\nfunction Home() {\r\n  let [count, setCount] = useState(0);\r\n  let [male, setMale] = useState(0);\r\n  let [female, setFemale] = useState(0);\r\n  let [lastSet, setLast] = useState('0/0/0 0.0.0');\r\n\r\n  useEffect(() => {\r\n    let data = getLocalStorage(CONST.KEY_DATA);\r\n    let lastDate = getLocalStorage(CONST.KEY_LMD);\r\n    if(data) {\r\n      setCount(data.total);\r\n      setMale(data.male);\r\n      setFemale(data.female);\r\n    }\r\n    if(lastDate) {\r\n      setLast(lastDate);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if(count) {\r\n      setLocalStorage(CONST.KEY_DATA, {\r\n        total: count,\r\n        male: male,\r\n        female: female\r\n      });\r\n      \r\n      if(lastSet) {\r\n        setLocalStorage(CONST.KEY_LMD, lastSet)\r\n      }\r\n    }\r\n  })\r\n\r\n  function add(num, isMale) {\r\n    if(isMale) {\r\n      setMale(male + num);\r\n    }\r\n    else {\r\n      setFemale(female + num);\r\n    }\r\n\r\n    setCount(count + num);\r\n    setLast(new Date().toLocaleString('id-ID'));\r\n  }\r\n\r\n  return(\r\n    <Wrapper>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center mt-4'>\r\n            <h1 className='font-weight-bold'>KPPS-Counter</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className='justify-content-center mb-4'>\r\n          <Badge color='danger' className='py-1 px-2'>\r\n            { \r\n              `Last Modified: ${lastSet ? lastSet.split(' ')[0] : '-'} at ${lastSet ? lastSet.split(' ')[1] : '-'}`\r\n            }\r\n          </Badge>\r\n        </Row>\r\n        <Row>\r\n          <Col className='text-center my-3'>\r\n            <Badge color='warning'>total</Badge>\r\n            <h1 className='font-weight-bold count-num'>\r\n              <Badge color='info'>\r\n                { count }\r\n              </Badge>\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-4\">\r\n          <Col className='text-center px-4'>\r\n            <Badge color='warning'>male</Badge>\r\n            <h1 className='font-weight-bold'>\r\n              <Badge color='info'>\r\n                { male }\r\n              </Badge>\r\n            </h1>\r\n          </Col>\r\n          <Col className='text-center px-4'>\r\n            <Badge color='warning'>female</Badge>\r\n            <h1 className='font-weight-bold'>\r\n              <Badge color='info'>\r\n                { female }\r\n              </Badge>\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className='py-4'>\r\n          <Col>\r\n            <Button \r\n              block \r\n              color='success'\r\n              onClick={() => add(1, true)}\r\n              className='p-4'\r\n            >\r\n              <FontAwesomeIcon icon={ faMale } size='3x' />\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button \r\n              block \r\n              color='success'\r\n              onClick={() => add(1, false)}\r\n              className='p-4'\r\n            >\r\n              <FontAwesomeIcon icon={ faFemale } size='3x' />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Home;","import { useState } from 'react';\r\nimport { Container, Row, Col, Button, Modal, ModalHeader, ModalFooter, ModalBody } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { removeLocalStorage } from '../utils/localStorage.js';\r\nimport { CONST } from '../config/constans.js';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  background-color: var(--gray);\r\n  color: var(--light);\r\n\r\n  .container {\r\n    height: calc(100vh - 112px) !important;\r\n  }\r\n\r\n  .count-num {\r\n    font-size: 8rem;\r\n  }\r\n\r\n  .badge.badge-info{\r\n    border: 0.2rem solid var(--light);\r\n  }\r\n\r\n  .btn {\r\n    border: 0.2rem solid var(--light);\r\n  }\r\n`\r\n\r\nfunction CustomModal({isOpen, toggle, positive, negative}) {\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={() => toggle()}>\r\n      <ModalHeader toggle={() => toggle()}>Oopss !!</ModalHeader>\r\n      <ModalBody>\r\n        Are you sure want to delete all data ?\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={() => positive()}>Yes</Button>{' '}\r\n        <Button color=\"secondary\" onClick={() => negative()}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction Info() {\r\n  const history = useHistory();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  function clear() {\r\n    removeLocalStorage(CONST.KEY_DATA);\r\n    removeLocalStorage(CONST.KEY_LMD);\r\n    toggle();\r\n    history.push('/')\r\n  }\r\n\r\n  return(\r\n    <Wrapper>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center my-4'>\r\n            <h1 className='font-weight-bold'>\r\n              Settings\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Button\r\n              block\r\n              color='danger'\r\n              onClick={() => {toggle()}}\r\n              className='font-weight-bold'\r\n            >\r\n              Clear Data\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <CustomModal isOpen={modal} toggle={toggle} positive={clear} negative={toggle} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Info;","import {\r\n  Home,\r\n  Info\r\n} from '../pages';\r\n\r\nconst routes = [\r\n  // This is main page\r\n  { exact: true, path: '/', component: Home },\r\n\r\n  { path: '/settings', component: Info },\r\n];\r\n\r\nexport default routes;\r\n  ","import {\n  Route,\n  Switch,\n  HashRouter as Router\n} from 'react-router-dom';\nimport { Navbar } from './components';\nimport styled from 'styled-components';\n\n// Routes Settings Here :\nimport routes from './config/routes';\n\nimport './App.css';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst MobileWrapper = styled.div`\n  width: 480px;\n`\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Wrapper>\n          <MobileWrapper>\n            <Navbar />\n            {\n              routes.map((route, idx, props) =>\n                <Route\n                  path={route.path}\n                  component={route.component}\n                  key={idx}\n                  exact={route.exact}\n                  {...props}\n                />\n              )\n            }\n          </MobileWrapper>\n        </Wrapper>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//Bootstrap css\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}